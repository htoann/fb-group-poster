name: Security Scan

on:
  pull_request:
    branches: ['master']
  push:
    branches: ['master']
  schedule:
    - cron: '0 3 * * 1' # Every Monday at 3 AM UTC

jobs:
  # ===================== CodeQL =====================
  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    env:
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      MONGODB_URI: ${{ secrets.MONGODB_URI }}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      FACEBOOK_CLIENT_ID: ${{ secrets.FACEBOOK_CLIENT_ID }}
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
      NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
      NEXT_PUBLIC_API_ENDPOINT: ${{ secrets.NEXT_PUBLIC_API_ENDPOINT }}
      NEXT_PUBLIC_BASE_URL: ${{ secrets.NEXT_PUBLIC_BASE_URL }}
      RABBIT_URL: ${{ secrets.RABBIT_URL }}
      UPSTASH_REDIS_REST_URL: ${{ secrets.UPSTASH_REDIS_REST_URL }}
      UPSTASH_REDIS_REST_TOKEN: ${{ secrets.UPSTASH_REDIS_REST_TOKEN }}
      STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
      NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}
      SMTP_HOST: ${{ secrets.SMTP_HOST }}
      SMTP_PORT: ${{ secrets.SMTP_PORT }}
      SMTP_USER: ${{ secrets.SMTP_USER }}
      SMTP_PASS: ${{ secrets.SMTP_PASS }}
      CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
      CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
      CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
      MY_GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: ['javascript'] # includes JS + TS
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: pnpm/action-setup@v4
        with:
          version: 9

      # ===================== Install dependencies =====================
      - run: pnpm install --frozen-lockfile
        env:
          NODE_ENV: development # ensure devDependencies like typescript are installed

      - uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - run: pnpm build

      - uses: github/codeql-action/analyze@v3

  # ===================== pnpm audit =====================
  # pnpm_audit:
  #   name: pnpm Audit
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4

  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: 20

  #     - uses: pnpm/action-setup@v4
  #       with:
  #         version: 9

  #     - run: pnpm install --frozen-lockfile
  #     - run: |
  #         pnpm audit --json > audit.json
  #         HIGH_COUNT=$(jq '[.advisories[] | select(.severity=="high" or .severity=="critical")] | length' audit.json)
  #         if [ "$HIGH_COUNT" -gt 0 ]; then
  #           echo "High/Critical vulnerabilities found!"
  #           exit 1
  #         fi

  # ===================== Trivy =====================
  trivy:
    name: Trivy Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          severity: 'HIGH,CRITICAL'
